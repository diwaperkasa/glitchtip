/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/settings/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Settings */
        get: operations["glitchtip_api_api_get_settings"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Api Root
         * @description /api/0/ gives information about the server and current user
         */
        get: operations["glitchtip_api_api_api_root"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/api-tokens/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Api Tokens */
        get: operations["apps_api_tokens_api_list_api_tokens"];
        put?: never;
        /** Create Api Token */
        post: operations["apps_api_tokens_api_create_api_token"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/api-tokens/{token_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Api Token */
        delete: operations["apps_api_tokens_api_delete_api_token"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/{project_id}/store/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Event Store
         * @description Event store is the original event ingest API from OSS Sentry but is used less often
         *     Unlike Envelope, it accepts only one Issue event.
         */
        post: operations["apps_event_ingest_api_event_store"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/{project_id}/envelope/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Event Envelope
         * @description Envelopes can contain various types of data.
         *     GlitchTip supports issue events and transaction events.
         *     Ignore other data types.
         *     Do support multiple valid events
         *     Make as few io calls as possible. Some language SDKs (PHP) cannot run async code
         *     and will block while waiting for GlitchTip to respond.
         */
        post: operations["apps_event_ingest_api_event_envelope"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/{project_id}/security/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Event Security
         * @description Accept Security (and someday other) issue events.
         *     Reformats event to make CSP browser format match more standard
         *     event format.
         */
        post: operations["apps_event_ingest_api_event_security"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/alerts/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Project Alerts */
        get: operations["apps_alerts_api_list_project_alerts"];
        put?: never;
        /** Create Project Alert */
        post: operations["apps_alerts_api_create_project_alert"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/alerts/{alert_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Project Alert */
        put: operations["apps_alerts_api_update_project_alert"];
        post?: never;
        /** Delete Project Alert */
        delete: operations["apps_alerts_api_delete_project_alert"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/files/difs/assemble/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Difs Assemble Api */
        post: operations["apps_difs_api_difs_assemble_api"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/reprocessing/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Project Reprocessing
         * @description Not implemented. It is a dummy API to keep `sentry-cli upload-dif` happy
         */
        post: operations["apps_difs_api_project_reprocessing"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/files/dsyms/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Dsyms */
        post: operations["apps_difs_api_dsyms"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/environments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Environments */
        get: operations["apps_environments_api_list_environments"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/environments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Environment Projects */
        get: operations["apps_environments_api_list_environment_projects"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/environments/{name}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Environment Project */
        put: operations["apps_environments_api_update_environment_project"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/chunk-upload/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Chunk Upload Info
         * @description Get server settings for chunk file upload
         */
        get: operations["apps_files_api_get_chunk_upload_info"];
        put?: never;
        /**
         * Chunk Upload
         * @description Upload one more more gzipped files to save
         */
        post: operations["apps_files_api_chunk_upload"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/import/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Importer */
        post: operations["apps_importer_api_importer"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/issues/{issue_id}/comments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Comments */
        get: operations["apps_issue_events_api_comments_list_comments"];
        put?: never;
        /** Add Comment */
        post: operations["apps_issue_events_api_comments_add_comment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/issues/{issue_id}/comments/{comment_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Comment */
        put: operations["apps_issue_events_api_comments_update_comment"];
        post?: never;
        /** Delete Comment */
        delete: operations["apps_issue_events_api_comments_delete_comment"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/issues/{issue_id}/events/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Issue Event */
        get: operations["apps_issue_events_api_events_list_issue_event"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/issues/{issue_id}/events/latest/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Latest Issue Event */
        get: operations["apps_issue_events_api_events_get_latest_issue_event"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/issues/{issue_id}/events/{event_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Issue Event */
        get: operations["apps_issue_events_api_events_get_issue_event"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/events/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Project Issue Event */
        get: operations["apps_issue_events_api_events_list_project_issue_event"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/events/{event_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project Issue Event */
        get: operations["apps_issue_events_api_events_get_project_issue_event"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/issues/{issue_id}/events/{event_id}/json/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Event Json */
        get: operations["apps_issue_events_api_events_get_event_json"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/issues/{issue_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Issue */
        get: operations["apps_issue_events_api_issues_get_issue"];
        /** Update Issue */
        put: operations["apps_issue_events_api_issues_update_issue"];
        post?: never;
        /** Delete Issue */
        delete: operations["apps_issue_events_api_issues_delete_issue"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/issues/{issue_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Organization Issue */
        put: operations["apps_issue_events_api_issues_update_organization_issue"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/issues/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Issues */
        get: operations["apps_issue_events_api_issues_list_issues"];
        /** Update Issues */
        put: operations["apps_issue_events_api_issues_update_issues"];
        post?: never;
        /** Delete Issues */
        delete: operations["apps_issue_events_api_issues_delete_issues"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/issues/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Project Issues */
        get: operations["apps_issue_events_api_issues_list_project_issues"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/issues/{issue_id}/tags/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Issue Tags */
        get: operations["apps_issue_events_api_issues_list_issue_tags"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/issues/{issue_id}/user-reports/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List User Reports */
        get: operations["apps_issue_events_api_user_reports_list_user_reports"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/issues/{issue_id}/hashes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Issue Hashes */
        get: operations["apps_issue_events_api_hashes_list_issue_hashes"];
        put?: never;
        post?: never;
        /** Delete Hash */
        delete: operations["apps_issue_events_api_hashes_delete_hash"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/observability/django/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Django Prometheus Metrics */
        get: operations["apps_observability_api_django_prometheus_metrics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Organizations
         * @description Return list of all organizations the user has access to.
         */
        get: operations["apps_organizations_ext_api_list_organizations"];
        put?: never;
        /**
         * Create Organization
         * @description Create new organization
         *     The first organization on a server is always allowed to be created.
         *     Afterwards, ENABLE_OPEN_USER_REGISTRATION is checked.
         *     Superusers are always allowed to create organizations.
         */
        post: operations["apps_organizations_ext_api_create_organization"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Organization
         * @description Return Organization with project and team details.
         */
        get: operations["apps_organizations_ext_api_get_organization"];
        /**
         * Update Organization
         * @description Update an organization.
         */
        put: operations["apps_organizations_ext_api_update_organization"];
        post?: never;
        /** Delete Organization */
        delete: operations["apps_organizations_ext_api_delete_organization"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/members/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Organization Members */
        get: operations["apps_organizations_ext_api_list_organization_members"];
        put?: never;
        /** Create Organization Member */
        post: operations["apps_organizations_ext_api_create_organization_member"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/teams/{organization_slug}/{team_slug}/members/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Team Organization Members */
        get: operations["apps_organizations_ext_api_list_team_organization_members"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/members/{member_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Organization Member */
        get: operations["apps_organizations_ext_api_get_organization_member"];
        /**
         * Update Organization Member
         * @description Update member role within organization
         */
        put: operations["apps_organizations_ext_api_update_organization_member"];
        post?: never;
        /**
         * Delete Organization Member
         * @description Remove member (user) from organization
         */
        delete: operations["apps_organizations_ext_api_delete_organization_member"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/members/{member_id}/set_owner/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Set Organization Owner
         * @description Set this team member as the one and only one Organization owner
         *     Only an existing Owner or user with the "org:admin" scope is able to perform this.
         *     GlitchTip specific API, no sentry api compatibility
         */
        post: operations["apps_organizations_ext_api_set_organization_owner"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/accept/{org_user_id}/{token}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Accept Invite
         * @description Return relevant organization data around an invite
         */
        get: operations["apps_organizations_ext_api_get_accept_invite"];
        put?: never;
        /**
         * Accept Invite
         * @description Accepts invite to organization
         */
        post: operations["apps_organizations_ext_api_accept_invite"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/transactions/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Transactions */
        get: operations["apps_performance_api_list_transactions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/transaction-groups/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Transaction Groups */
        get: operations["apps_performance_api_list_transaction_groups"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/transaction-groups/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Transaction Group */
        get: operations["apps_performance_api_get_transaction_group"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Projects
         * @description List all projects that a user has access to
         */
        get: operations["apps_projects_api_list_projects"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project */
        get: operations["apps_projects_api_get_project"];
        /** Update Project */
        put: operations["apps_projects_api_update_project"];
        post?: never;
        /** Delete Project */
        delete: operations["apps_projects_api_delete_project"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/teams/{organization_slug}/{team_slug}/projects/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Team Projects
         * @description List all projects for a given team
         */
        get: operations["apps_projects_api_list_team_projects"];
        put?: never;
        /**
         * Create Project
         * @description Create a new project given a team and organization
         */
        post: operations["apps_projects_api_create_project"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/projects/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Organization Projects
         * @description Fetch list of organizations for a project
         *     Contains team information
         *     query: Filter on team, ex: ?query=!team:burke-software
         */
        get: operations["apps_projects_api_list_organization_projects"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/keys/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Project Keys
         * @description List all DSN keys for a given project
         */
        get: operations["apps_projects_api_list_project_keys"];
        put?: never;
        /**
         * Create Project Key
         * @description Create new key for project. Rate limiting not implemented.
         */
        post: operations["apps_projects_api_create_project_key"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/keys/{key_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project Key */
        get: operations["apps_projects_api_get_project_key"];
        /** Update Project Key */
        put: operations["apps_projects_api_update_project_key"];
        post?: never;
        /** Delete Project Key */
        delete: operations["apps_projects_api_delete_project_key"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/users/{user_id}/notifications/alerts/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * User Notification Alerts
         * @description Returns dictionary of project_id: status. Now project_id status means it's "default"
         *
         *     To update, submit `{project_id: status}` where status is -1 (default), 0, or 1
         */
        get: operations["apps_projects_api_user_notification_alerts"];
        /** Update User Notification Alerts */
        put: operations["apps_projects_api_update_user_notification_alerts"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/stats_v2/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Stats V2
         * @description Reverse engineered stats v2 endpoint. Endpoint in sentry not documented.
         *     Appears similar to documented sessions endpoint.
         *     Used by the Sentry Grafana integration.
         *
         *     Used to return time series statistics.
         *     Submit query params start, end, and interval (defaults to 1h)
         *     Limits results to 1000 intervals. For example if using hours, max days would be 41
         */
        get: operations["apps_stats_api_stats_v2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/stripe/products/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Stripe Products */
        get: operations["apps_stripe_api_list_stripe_products"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/stripe/subscriptions/{organization_slug}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Stripe Subscription */
        get: operations["apps_stripe_api_get_stripe_subscription"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/stripe/organizations/{organization_slug}/create-stripe-subscription-checkout/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create Stripe Session
         * @description Create Stripe Checkout, send to client for redirecting to Stripe
         *     See https://stripe.com/docs/api/checkout/sessions/create
         */
        post: operations["apps_stripe_api_create_stripe_session"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/stripe/organizations/{organization_slug}/create-billing-portal/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Stripe Billing Portal Session
         * @description See https://stripe.com/docs/billing/subscriptions/integrating-self-serve-portal
         */
        post: operations["apps_stripe_api_stripe_billing_portal_session"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/stripe/subscriptions/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Stripe Create Subscription */
        post: operations["apps_stripe_api_stripe_create_subscription"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/stripe/subscriptions/{organization_slug}/events_count/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Subscription Events Count */
        get: operations["apps_stripe_api_subscription_events_count"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/artifactbundle/assemble/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Artifact Bundle Assemble
         * @description Associate files with assembly bundle and optionally release
         */
        post: operations["apps_sourcecode_api_artifact_bundle_assemble"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/teams/{organization_slug}/{team_slug}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Team */
        get: operations["apps_teams_api_get_team"];
        /** Update Team */
        put: operations["apps_teams_api_update_team"];
        post?: never;
        /** Delete Team */
        delete: operations["apps_teams_api_delete_team"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/teams/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Teams */
        get: operations["apps_teams_api_list_teams"];
        put?: never;
        /** Create Team */
        post: operations["apps_teams_api_create_team"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/members/{member_id}/teams/{team_slug}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Add Member To Team */
        post: operations["apps_teams_api_add_member_to_team"];
        /** Delete Member From Team */
        delete: operations["apps_teams_api_delete_member_from_team"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/teams/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Project Teams */
        get: operations["apps_teams_api_list_project_teams"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/teams/{team_slug}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Add Team To Project
         * @description Add team to project
         */
        post: operations["apps_teams_api_add_team_to_project"];
        /**
         * Delete Team From Project
         * @description Remove team from project
         */
        delete: operations["apps_teams_api_delete_team_from_project"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/heartbeat_check/{endpoint_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Heartbeat Check
         * @description Heartbeat monitors allow an external service to contact this endpoint
         *     when the service is up.
         */
        post: operations["apps_uptime_api_heartbeat_check"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/monitors/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Monitors */
        get: operations["apps_uptime_api_list_monitors"];
        put?: never;
        /** Create Monitor */
        post: operations["apps_uptime_api_create_monitor"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/monitors/{monitor_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Monitor */
        get: operations["apps_uptime_api_get_monitor"];
        /** Update Monitor */
        put: operations["apps_uptime_api_update_monitor"];
        post?: never;
        /** Delete Monitor */
        delete: operations["apps_uptime_api_delete_monitor"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/monitors/{monitor_id}/checks/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Monitor Checks
         * @description List checks performed for a monitor
         *     Set is_change query param to True to show only changes,
         *     This is useful to see only when a service went up and down.
         */
        get: operations["apps_uptime_api_list_monitor_checks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/status-pages/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Status Pages
         * @description List status pages, used for showing the current status of an uptime monitor
         */
        get: operations["apps_uptime_api_list_status_pages"];
        put?: never;
        /** Create Status Page */
        post: operations["apps_uptime_api_create_status_page"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/users/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List Users
         * @description Exists in Sentry OSS, unsure what the use case is
         *     We make it only list the current user
         */
        get: operations["apps_users_api_list_users"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/users/{user_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get User */
        get: operations["apps_users_api_get_user"];
        /** Update User */
        put: operations["apps_users_api_update_user"];
        post?: never;
        /** Delete User */
        delete: operations["apps_users_api_delete_user"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/users/{user_id}/emails/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Emails */
        get: operations["apps_users_api_list_emails"];
        /** Set Email As Primary */
        put: operations["apps_users_api_set_email_as_primary"];
        /**
         * Create Email
         * @description Create a new unverified email address. Will return 400 if the email already exists
         *     and is verified.
         */
        post: operations["apps_users_api_create_email"];
        /** Delete Email */
        delete: operations["apps_users_api_delete_email"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/users/{user_id}/emails/confirm/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Send Confirm Email */
        post: operations["apps_users_api_send_confirm_email"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/users/{user_id}/notifications/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Notifications */
        get: operations["apps_users_api_get_notifications"];
        /** Update Notifications */
        put: operations["apps_users_api_update_notifications"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/generate-recovery-codes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Generate Recovery Codes
         * @description Extension of django-allauth headless API to pre-generate recovery codes before saving
         */
        get: operations["apps_users_api_generate_recovery_codes"];
        put?: never;
        /**
         * Set Recovery Codes
         * @description Extension of django-allauth headless API to set recovery codes
         */
        post: operations["apps_users_api_set_recovery_codes"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/wizard/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Setup Wizard
         * @description First step used by sentry-wizard
         *     Generates a random hash for later usage
         */
        get: operations["apps_wizard_api_setup_wizard"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/wizard/{wizard_hash}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Setup Wizard Hash
         * @description Last step used by sentry-wizard
         *     For a specified hash, fetch data for projects with organizations and dsn keys
         *     Hash replaces user authentication
         */
        get: operations["apps_wizard_api_setup_wizard_hash"];
        put?: never;
        post?: never;
        /**
         * Setup Wizard Delete
         * @description Delete hash used by sentry-wizard.
         *     It contains sensitive data, so it makes sense to remove when done.
         */
        delete: operations["apps_wizard_api_setup_wizard_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/wizard-set-token/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Setup Wizard Set Token
         * @description Authenticated api for storing projects data to later be used by sentry-wizard
         */
        post: operations["apps_wizard_api_setup_wizard_set_token"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/releases/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Releases */
        get: operations["apps_releases_api_list_releases"];
        put?: never;
        /** Create Release */
        post: operations["apps_releases_api_create_release"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/releases/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Project Releases */
        get: operations["apps_releases_api_list_project_releases"];
        put?: never;
        /** Create Project Release */
        post: operations["apps_releases_api_create_project_release"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/releases/{version}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Release */
        get: operations["apps_releases_api_get_release"];
        /** Update Release */
        put: operations["apps_releases_api_update_release"];
        post?: never;
        /** Delete Organization Release */
        delete: operations["apps_releases_api_delete_organization_release"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/releases/{version}/files/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Release Files */
        get: operations["apps_releases_api_list_release_files"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/releases/{version}/files/{file_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Organization Release File */
        get: operations["apps_releases_api_get_organization_release_file"];
        put?: never;
        post?: never;
        /** Delete Organization Release File */
        delete: operations["apps_releases_api_delete_organization_release_file"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project Release */
        get: operations["apps_releases_api_get_project_release"];
        /** Update Project Release */
        put: operations["apps_releases_api_update_project_release"];
        post?: never;
        /** Delete Project Release */
        delete: operations["apps_releases_api_delete_project_release"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/files/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Project Release Files */
        get: operations["apps_releases_api_list_project_release_files"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/projects/{organization_slug}/{project_slug}/releases/{version}/files/{file_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Project Release File */
        get: operations["apps_releases_api_get_project_release_file"];
        put?: never;
        post?: never;
        /** Delete Project Release File */
        delete: operations["apps_releases_api_delete_project_release_file"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/0/organizations/{organization_slug}/releases/{version}/assemble/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Assemble Release */
        post: operations["apps_releases_api_assemble_release"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/embed/error-page/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Embed Error Page */
        get: operations["apps_event_ingest_embed_api_get_embed_error_page"];
        put?: never;
        /** Submit Embed Error Page */
        post: operations["apps_event_ingest_embed_api_submit_embed_error_page"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** SettingsOut */
        SettingsOut: {
            /** Socialapps */
            socialApps: components["schemas"]["SocialAppSchema"][];
            /** Billingenabled */
            billingEnabled: boolean;
            /** Ipaidforglitchtip */
            iPaidForGlitchTip: boolean;
            /** Enableuserregistration */
            enableUserRegistration: boolean;
            /** Enableorganizationcreation */
            enableOrganizationCreation: boolean;
            /** Stripepublickey */
            stripePublicKey: string | null;
            /** Plausibleurl */
            plausibleUrl: string | null;
            /** Plausibledomain */
            plausibleDomain: string | null;
            /** Chatwootwebsitetoken */
            chatwootWebsiteToken: string | null;
            /** Sentrydsn */
            sentryDSN: string | null;
            /** Sentrytracessamplerate */
            sentryTracesSampleRate: number | null;
            /** Environment */
            environment: string | null;
            /** Version */
            version: string;
            /** Servertimezone */
            serverTimeZone: string;
            /** Glitchtipinstancename */
            glitchtipInstanceName: string | null;
        };
        /** SocialAppSchema */
        SocialAppSchema: {
            /** Scopes */
            scopes: string[];
            /** Authorize Url */
            authorize_url: string | null;
            /** Name */
            name: string;
            /**
             * Client Id
             * @description App ID, or consumer key
             */
            client_id: string;
            /** Provider */
            provider: string;
        };
        /** APIRootSchema */
        APIRootSchema: {
            /** Version */
            version: string;
            user: components["schemas"]["UserSchema"] | null;
            auth: components["schemas"]["APITokenSchema"] | null;
        };
        /** APITokenSchema */
        APITokenSchema: {
            /** Id */
            id: number;
            /** Label */
            label: string;
            /** Scopes */
            scopes: string[];
            /** Token */
            token: string;
            /**
             * Created
             * Format: date-time
             */
            created: string;
        };
        /** SocialAccountSchema */
        SocialAccountSchema: {
            /** Email */
            email: string | null;
            /** Username */
            username: string | null;
            /** ID */
            id?: number | null;
            /** Provider */
            provider: string;
            /** Uid */
            uid: string;
            /**
             * Last Login
             * Format: date-time
             */
            lastLogin: string;
            /**
             * Date Joined
             * Format: date-time
             */
            dateJoined: string;
        };
        /** UserOptions */
        UserOptions: {
            /** Timezone */
            timezone?: string | null;
            /** Stacktraceorder */
            stacktraceOrder?: number | null;
            /** Language */
            language?: string | null;
            /** Clock24Hours */
            clock24Hours?: boolean | null;
            /** Preferredtheme */
            preferredTheme?: string | null;
        };
        /** UserSchema */
        UserSchema: {
            /** Id */
            id: string;
            options: components["schemas"]["UserOptions"];
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Datejoined
             * Format: date-time
             */
            dateJoined: string;
            /** Haspasswordauth */
            hasPasswordAuth: boolean;
            /** Identities */
            identities: components["schemas"]["SocialAccountSchema"][];
            /** Last Login */
            lastLogin?: string | null;
            /**
             * Superuser Status
             * @description Designates that this user has all permissions without explicitly assigning them.
             * @default false
             */
            isSuperuser: boolean;
            /**
             * Active
             * @description Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
             * @default true
             */
            isActive: boolean;
            /** Name */
            name?: string | null;
        };
        /** Input */
        Input: {
            /**
             * Limit
             * @description Number of results to return per page.
             */
            limit?: number | null;
            /**
             * Cursor
             * @description The pagination cursor value.
             */
            cursor?: string | null;
        };
        /** APITokenIn */
        APITokenIn: {
            /** Scopes */
            scopes: number;
            /** Label */
            label?: string | null;
        };
        /** EventIngestOut */
        EventIngestOut: {
            /** Event Id */
            event_id: string;
            /** Task Id */
            task_id?: string | null;
        };
        /** AppContext */
        AppContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "app";
            /** App Start Time */
            app_start_time?: string | null;
            /** Device App Hash */
            device_app_hash?: string | null;
            /** Build Type */
            build_type?: string | null;
            /** App Identifier */
            app_identifier?: string | null;
            /** App Name */
            app_name?: string | null;
            /** App Version */
            app_version?: string | null;
            /** App Build */
            app_build?: string | null;
            /** App Memory */
            app_memory?: number | null;
            /** In Foreground */
            in_foreground?: boolean | null;
        };
        /** BrowserContext */
        BrowserContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "browser";
            /** Name */
            name: string;
            /** Version */
            version?: string | null;
        };
        /** ClientSDKInfo */
        ClientSDKInfo: {
            /** Integrations */
            integrations?: (string | null)[] | null;
            /** Name */
            name: string | null;
            /** Packages */
            packages?: components["schemas"]["ClientSDKPackage"][] | null;
            /** Version */
            version: string | null;
        };
        /** ClientSDKPackage */
        ClientSDKPackage: {
            /** Name */
            name?: string | null;
            /** Version */
            version?: string | null;
        };
        /** CloudResourceContext */
        CloudResourceContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "cloud_resource";
            /** Cloud */
            cloud: {
                [key: string]: unknown;
            };
            /** Host */
            host: {
                [key: string]: unknown;
            };
        };
        /** CultureContext */
        CultureContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "culture";
            /** Calendar */
            calendar?: string | null;
            /** Display Name */
            display_name?: string | null;
            /** Locale */
            locale?: string | null;
            /** Is 24 Hour Format */
            is_24_hour_format?: boolean | null;
            /** Timezone */
            timezone?: string | null;
        };
        /** DebugMeta */
        DebugMeta: {
            /** Images */
            images: (components["schemas"]["SourceMapImage"] | components["schemas"]["OtherDebugImage"])[];
        };
        /** DeviceContext */
        DeviceContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "device";
            /** Name */
            name?: string | null;
            /** Family */
            family?: string | null;
            /** Model */
            model?: string | null;
            /** Model Id */
            model_id?: string | null;
            /** Arch */
            arch?: string | null;
            /** Battery Level */
            battery_level?: number | null;
            /** Orientation */
            orientation?: string | null;
            /** Manufacturer */
            manufacturer?: string | null;
            /** Brand */
            brand?: string | null;
            /** Screen Resolution */
            screen_resolution?: string | null;
            /** Screen Height Pixels */
            screen_height_pixels?: number | null;
            /** Screen Width Pixels */
            screen_width_pixels?: number | null;
            /** Screen Density */
            screen_density?: number | null;
            /** Screen Dpi */
            screen_dpi?: number | null;
            /** Online */
            online?: boolean | null;
            /** Charging */
            charging?: boolean | null;
            /** Low Memory */
            low_memory?: boolean | null;
            /** Simulator */
            simulator?: boolean | null;
            /** Memory Size */
            memory_size?: number | null;
            /** Free Memory */
            free_memory?: number | null;
            /** Usable Memory */
            usable_memory?: number | null;
            /** Storage Size */
            storage_size?: number | null;
            /** Free Storage */
            free_storage?: number | null;
            /** External Storage Size */
            external_storage_size?: number | null;
            /** External Free Storage */
            external_free_storage?: number | null;
            /** Boot Time */
            boot_time?: string | null;
            /** Timezone */
            timezone?: string | null;
            /** Language */
            language?: string | null;
            /** Processor Count */
            processor_count?: number | null;
            /** Cpu Description */
            cpu_description?: string | null;
            /** Processor Frequency */
            processor_frequency?: number | null;
            /** Device Type */
            device_type?: string | null;
            /** Battery Status */
            battery_status?: string | null;
            /** Device Unique Identifier */
            device_unique_identifier?: string | null;
            /** Supports Vibration */
            supports_vibration?: boolean | null;
            /** Supports Accelerometer */
            supports_accelerometer?: boolean | null;
            /** Supports Gyroscope */
            supports_gyroscope?: boolean | null;
            /** Supports Audio */
            supports_audio?: boolean | null;
            /** Supports Location Service */
            supports_location_service?: boolean | null;
        };
        /** EventBreadcrumb */
        EventBreadcrumb: {
            /**
             * Type
             * @default default
             */
            type: string | null;
            /** Category */
            category?: string | null;
            /** Message */
            message?: string | null;
            /** Data */
            data?: {
                [key: string]: unknown;
            } | null;
            /**
             * Level
             * @default info
             */
            level: ("fatal" | "error" | "warning" | "info" | "debug") | null;
            /** Timestamp */
            timestamp?: string | null;
        };
        /** EventException */
        EventException: {
            /** Type */
            type?: string | null;
            /** Value */
            value?: string | null;
            /** Module */
            module?: string | null;
            /** Thread Id */
            thread_id?: string | null;
            mechanism?: components["schemas"]["ExceptionMechanism"] | null;
            stacktrace?: components["schemas"]["StackTrace"] | null;
        };
        /** EventGeo */
        EventGeo: {
            /** City */
            city?: string | null;
            /** Country Code */
            country_code?: string | null;
            /** Region */
            region?: string | null;
            /** Subdivision */
            subdivision?: string | null;
        };
        /** EventIngestSchema */
        EventIngestSchema: {
            /** Platform */
            platform?: string | null;
            /**
             * Event Id
             * Format: uuid
             */
            event_id: string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp?: string;
            /**
             * Level
             * @default error
             */
            level: string | null;
            logentry?: components["schemas"]["EventMessage"] | null;
            /** Logger */
            logger?: string | null;
            /** Transaction */
            transaction?: string | null;
            /** Server Name */
            server_name?: string | null;
            /** Release */
            release?: string | null;
            /** Dist */
            dist?: string | null;
            /** Tags */
            tags?: (string | null)[][] | {
                [key: string]: string | null;
            } | null;
            /** Environment */
            environment?: string | null;
            /** Modules */
            modules?: {
                [key: string]: string | null;
            } | null;
            /** Extra */
            extra?: {
                [key: string]: unknown;
            } | null;
            /** Fingerprint */
            fingerprint?: (string | null)[] | null;
            /** Errors */
            errors?: unknown[] | null;
            /** Exception */
            exception?: components["schemas"]["EventException"][] | components["schemas"]["ValueEventException"] | null;
            /** Message */
            message?: string | components["schemas"]["EventMessage"] | null;
            template?: components["schemas"]["EventTemplate"] | null;
            /** Breadcrumbs */
            breadcrumbs?: components["schemas"]["EventBreadcrumb"][] | components["schemas"]["ValueEventBreadcrumb"] | null;
            sdk?: components["schemas"]["ClientSDKInfo"] | null;
            request?: components["schemas"]["IngestRequest"] | null;
            /** Contexts */
            contexts?: {
                [key: string]: (components["schemas"]["DeviceContext"] | components["schemas"]["OSContext"] | components["schemas"]["RuntimeContext"] | components["schemas"]["AppContext"] | components["schemas"]["BrowserContext"] | components["schemas"]["GPUContext"] | components["schemas"]["StateContext"] | components["schemas"]["CultureContext"] | components["schemas"]["CloudResourceContext"] | components["schemas"]["TraceContext"] | components["schemas"]["ReplayContext"] | components["schemas"]["ResponseContext"]) | unknown;
            } | null;
            user?: components["schemas"]["EventUser"] | null;
            debug_meta?: components["schemas"]["DebugMeta"] | null;
        };
        /** EventMessage */
        EventMessage: {
            /**
             * Formatted
             * @default
             */
            formatted: string;
            /** Message */
            message?: string | null;
            /** Params */
            params?: string[] | {
                [key: string]: string;
            } | null;
        };
        /** EventTemplate */
        EventTemplate: {
            /** Lineno */
            lineno: number;
            /** Abs Path */
            abs_path?: string | null;
            /** Filename */
            filename: string;
            /** Context Line */
            context_line: string;
            /** Pre Context */
            pre_context?: string[] | null;
            /** Post Context */
            post_context?: string[] | null;
        };
        /** EventUser */
        EventUser: {
            /** Id */
            id?: string | null;
            /** Username */
            username?: string | null;
            /** Email */
            email?: string | null;
            /** Ip Address */
            ip_address?: string | null;
            /** Data */
            data?: {
                [key: string]: unknown;
            } | null;
            geo?: components["schemas"]["EventGeo"] | null;
        };
        /** ExceptionMechanism */
        ExceptionMechanism: {
            /** Type */
            type: string;
            /** Description */
            description?: string | null;
            /** Help Link */
            help_link?: string | null;
            /** Handled */
            handled?: boolean | null;
            /** Synthetic */
            synthetic?: boolean | null;
            /** Meta */
            meta?: {
                [key: string]: unknown;
            } | null;
            /** Data */
            data?: {
                [key: string]: unknown;
            } | null;
        };
        /** GPUContext */
        GPUContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "gpu";
            /** Name */
            name: string;
            /** Version */
            version?: string | null;
            /** Id */
            id?: string | null;
            /** Vendor Id */
            vendor_id?: string | null;
            /** Vendor Name */
            vendor_name?: string | null;
            /** Memory Size */
            memory_size?: number | null;
            /** Api Type */
            api_type?: string | null;
            /** Multi Threaded Rendering */
            multi_threaded_rendering?: boolean | null;
            /** Npot Support */
            npot_support?: string | null;
            /** Max Texture Size */
            max_texture_size?: number | null;
            /** Graphics Shader Level */
            graphics_shader_level?: string | null;
            /** Supports Draw Call Instancing */
            supports_draw_call_instancing?: boolean | null;
            /** Supports Ray Tracing */
            supports_ray_tracing?: boolean | null;
            /** Supports Compute Shaders */
            supports_compute_shaders?: boolean | null;
            /** Supports Geometry Shaders */
            supports_geometry_shaders?: boolean | null;
        };
        /** IngestRequest */
        IngestRequest: {
            /** Api Target */
            api_target?: string | null;
            /** Body Size */
            body_size?: number | null;
            /** Cookies */
            cookies?: string | (string | null)[][] | {
                [key: string]: string | null;
            } | null;
            /** Data */
            data?: string | {
                [key: string]: unknown;
            } | unknown[] | unknown | null;
            /** Env */
            env?: {
                [key: string]: unknown;
            } | null;
            /** Fragment */
            fragment?: string | null;
            /** Method */
            method?: string | null;
            /** Protocol */
            protocol?: string | null;
            /** Url */
            url?: string | null;
            /** Headers */
            headers?: (string | null)[][] | {
                [key: string]: string | null;
            } | null;
            /** Query String */
            query_string?: string | (string | null)[][] | {
                [key: string]: string | {
                    [key: string]: unknown;
                } | null;
            } | null;
        };
        /** OSContext */
        OSContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "os";
            /** Name */
            name: string;
            /** Version */
            version?: string | null;
            /** Build */
            build?: string | null;
            /** Kernel Version */
            kernel_version?: string | null;
            /** Rooted */
            rooted?: boolean | null;
            /** Theme */
            theme?: string | null;
            /** Raw Description */
            raw_description?: string | null;
        };
        /** OtherDebugImage */
        OtherDebugImage: {
            /** Type */
            type: string;
        };
        /** ReplayContext */
        ReplayContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "replay";
            /** Replay Id */
            replay_id: string;
        };
        /** ResponseContext */
        ResponseContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "response";
            /** Status Code */
            status_code: number;
        };
        /** RuntimeContext */
        RuntimeContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "runtime";
            /** Name */
            name?: string | null;
            /** Version */
            version?: string | null;
            /** Raw Description */
            raw_description?: string | null;
        };
        /** SourceMapImage */
        SourceMapImage: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "sourcemap";
            /** Code File */
            code_file: string;
            /**
             * Debug Id
             * Format: uuid
             */
            debug_id: string;
        };
        /** StackTrace */
        StackTrace: {
            /** Frames */
            frames: components["schemas"]["StackTraceFrame"][];
            /** Registers */
            registers?: {
                [key: string]: string;
            } | null;
        };
        /** StackTraceFrame */
        StackTraceFrame: {
            /** Filename */
            filename?: string | null;
            /** Function */
            function?: string | null;
            /** Raw Function */
            raw_function?: string | null;
            /** Module */
            module?: string | null;
            /** Lineno */
            lineno?: number | null;
            /** Colno */
            colno?: number | null;
            /** Abs Path */
            abs_path?: string | null;
            /** Context Line */
            context_line?: string | null;
            /** Pre Context */
            pre_context?: (string | null)[] | null;
            /** Post Context */
            post_context?: (string | null)[] | null;
            /** Source Link */
            source_link?: string | null;
            /** In App */
            in_app?: boolean | null;
            /** Stack Start */
            stack_start?: boolean | null;
            /** Vars */
            vars?: {
                [key: string]: string | {
                    [key: string]: unknown;
                } | unknown[];
            } | null;
            /** Instruction Addr */
            instruction_addr?: string | null;
            /** Addr Mode */
            addr_mode?: string | null;
            /** Symbol Addr */
            symbol_addr?: string | null;
            /** Image Addr */
            image_addr?: string | null;
            /** Package */
            package?: string | null;
            /** Platform */
            platform?: string | null;
        };
        /** StateContext */
        StateContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "state";
            /** State */
            state: {
                [key: string]: unknown;
            };
        };
        /** TraceContext */
        TraceContext: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "trace";
            /** Trace Id */
            trace_id: string;
            /** Span Id */
            span_id: string;
            /** Parent Span Id */
            parent_span_id?: string | null;
            /** Op */
            op?: string | null;
            /** Status */
            status?: string | null;
            /** Exclusive Time */
            exclusive_time?: number | null;
            /** Client Sample Rate */
            client_sample_rate?: number | null;
            /** Tags */
            tags?: {
                [key: string]: unknown;
            } | unknown[] | null;
            /** Dynamic Sampling Context */
            dynamic_sampling_context?: {
                [key: string]: unknown;
            } | null;
            /** Origin */
            origin?: string | null;
        };
        /** ValueEventBreadcrumb */
        ValueEventBreadcrumb: {
            /** Values */
            values: components["schemas"]["EventBreadcrumb"][];
        };
        /** ValueEventException */
        ValueEventException: {
            /** Values */
            values: components["schemas"]["EventException"][];
        };
        /** EnvelopeIngestOut */
        EnvelopeIngestOut: {
            /** Id */
            id?: string | null;
        };
        /** EnvelopeSchema */
        EnvelopeSchema: {
            [key: string]: unknown;
        }[];
        /**
         * CSPReportSchema
         * @description https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy-Report-Only#violation_report_syntax
         */
        CSPReportSchema: {
            /** Blocked-Uri */
            "blocked-uri": string;
            /**
             * Disposition
             * @enum {string}
             */
            disposition: "enforce" | "report";
            /** Document-Uri */
            "document-uri": string;
            /** Effective-Directive */
            "effective-directive": string;
            /** Original-Policy */
            "original-policy": string | null;
            /** Script-Sample */
            "script-sample"?: string | null;
            /** Status-Code */
            "status-code": number | null;
            /** Line Number */
            line_number?: number | null;
            /** Column Number */
            column_number?: number | null;
        };
        /** SecuritySchema */
        SecuritySchema: {
            "csp-report": components["schemas"]["CSPReportSchema"];
        };
        /** AlertRecipientSchema */
        AlertRecipientSchema: {
            /** ID */
            id?: number | null;
            /** Recipient Type */
            recipientType: string;
            /** Url */
            url?: string | null;
        };
        /** ProjectAlertSchema */
        ProjectAlertSchema: {
            /** Alertrecipients */
            alertRecipients: components["schemas"]["AlertRecipientSchema"][];
            /** ID */
            id?: number | null;
            /** Name */
            name?: string | null;
            /** Timespan Minutes */
            timespanMinutes?: number | null;
            /** Quantity */
            quantity?: number | null;
            /**
             * Uptime
             * @description Send alert on any uptime monitor check failure
             * @default false
             */
            uptime: boolean;
        };
        /** EmailAlertRecipientIn */
        EmailAlertRecipientIn: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            recipientType: "email";
            /**
             * Url
             * @default
             */
            url: string | "" | null;
        };
        /** ProjectAlertIn */
        ProjectAlertIn: {
            /** Name */
            name?: string | null;
            /** Alertrecipients */
            alertRecipients?: (components["schemas"]["EmailAlertRecipientIn"] | components["schemas"]["WebhookAlertRecipientIn"])[] | null;
            /** Timespan Minutes */
            timespanMinutes?: number | null;
            /** Quantity */
            quantity?: number | null;
            /**
             * Uptime
             * @description Send alert on any uptime monitor check failure
             * @default false
             */
            uptime: boolean;
        };
        /** WebhookAlertRecipientIn */
        WebhookAlertRecipientIn: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            recipientType: "discord" | "googlechat" | "webhook";
            /**
             * Url
             * Format: uri
             */
            url: string;
        };
        /** AssemblePayload */
        AssemblePayload: {
            [key: string]: components["schemas"]["ChecksumSchema"];
        };
        /** ChecksumSchema */
        ChecksumSchema: {
            /** Name */
            name?: string | null;
            /** Debug Id */
            debug_id?: string | null;
            /** Chunks */
            chunks?: string[];
        };
        /** EnvironmentSchema */
        EnvironmentSchema: {
            /** ID */
            id?: number | null;
            /** Name */
            name: string;
        };
        /** EnvironmentProjectSchema */
        EnvironmentProjectSchema: {
            /** Name */
            name: string;
            /** ID */
            id?: number | null;
            /**
             * Is Hidden
             * @default false
             */
            isHidden: boolean;
        };
        /** EnvironmentProjectIn */
        EnvironmentProjectIn: {
            /** Name */
            name: string;
            /** Ishidden */
            isHidden: boolean;
        };
        /** ImportIn */
        ImportIn: {
            /**
             * Url
             * Format: uri
             */
            url: string;
            /** Authtoken */
            authToken: string;
            /** Organizationslug */
            organizationSlug: string;
        };
        /** CommentSchema */
        CommentSchema: {
            /** Data */
            data: {
                [key: string]: string;
            };
            /**
             * Type
             * @default note
             */
            type: string | null;
            /**
             * Datecreated
             * Format: date-time
             */
            dateCreated: string;
            user: components["schemas"]["CommentUserSchema"] | null;
            /** ID */
            id?: number | null;
        };
        /** CommentUserSchema */
        CommentUserSchema: {
            /** Id */
            id: string;
            /** Email */
            email: string;
        };
        /** PostCommentSchema */
        PostCommentSchema: {
            /** Data */
            data: {
                [key: string]: string;
            };
        };
        /**
         * APIEventBreadcrumb
         * @description Slightly modified Breadcrumb for sentry api compatibility
         */
        APIEventBreadcrumb: {
            /**
             * Type
             * @default default
             */
            type: string | null;
            /** Category */
            category?: string | null;
            /** Message */
            message?: string | null;
            /** Data */
            data?: {
                [key: string]: unknown;
            } | null;
            /**
             * Level
             * @default info
             */
            level: ("fatal" | "error" | "warning" | "info" | "debug") | null;
            /** Timestamp */
            timestamp?: string | null;
            /** Event Id */
            event_id?: string | null;
        };
        /** BreadcrumbsEntry */
        BreadcrumbsEntry: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "breadcrumbs";
            /** Data */
            data: {
                [key: string]: components["schemas"]["APIEventBreadcrumb"][];
            };
        };
        /** CSPEntry */
        CSPEntry: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "csp";
            /** Data */
            data: {
                [key: string]: unknown;
            };
        };
        /** ExceptionEntry */
        ExceptionEntry: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "exception";
            /** Data */
            data: {
                [key: string]: unknown;
            };
        };
        /** IssueEventSchema */
        IssueEventSchema: {
            /** Platform */
            platform?: string | null;
            /** Id.Hex */
            "id.hex": string;
            /** Eventid */
            eventID: string;
            /** Issue.Project Id */
            "issue.project_id": number;
            /** Groupid */
            groupID: string;
            /**
             * Datecreated
             * Format: date-time
             */
            dateCreated: string;
            /**
             * Datereceived
             * Format: date-time
             */
            dateReceived: string;
            /** Dist */
            dist?: string | null;
            /** Transaction */
            transaction?: string | null;
            /** Data.Modules */
            "data.modules"?: {
                [key: string]: string | null;
            } | null;
            /** Get Type Display */
            get_type_display: string;
            /** Message */
            message: string;
            /** Metadata */
            metadata?: {
                [key: string]: string;
            };
            /**
             * Tags
             * @default []
             */
            tags: {
                [key: string]: string | null;
            }[];
            /** Entries */
            entries?: (components["schemas"]["BreadcrumbsEntry"] | components["schemas"]["CSPEntry"] | components["schemas"]["ExceptionEntry"] | components["schemas"]["MessageEntry"] | components["schemas"]["RequestEntry"])[];
            /** Contexts */
            contexts?: {
                [key: string]: (components["schemas"]["DeviceContext"] | components["schemas"]["OSContext"] | components["schemas"]["RuntimeContext"] | components["schemas"]["AppContext"] | components["schemas"]["BrowserContext"] | components["schemas"]["GPUContext"] | components["schemas"]["StateContext"] | components["schemas"]["CultureContext"] | components["schemas"]["CloudResourceContext"] | components["schemas"]["TraceContext"] | components["schemas"]["ReplayContext"] | components["schemas"]["ResponseContext"]) | unknown;
            } | null;
            /** Context */
            context?: {
                [key: string]: unknown;
            } | null;
            /** User */
            user?: unknown | null;
            /** Sdk */
            sdk?: {
                [key: string]: unknown;
            } | null;
            /** Title */
            title: string;
        };
        /** MessageEntry */
        MessageEntry: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "message";
            /** Data */
            data: {
                [key: string]: unknown;
            };
        };
        /** Request */
        Request: {
            /** Apitarget */
            apiTarget?: string | null;
            /** Bodysize */
            bodySize?: number | null;
            /** Cookies */
            cookies?: string | (string | null)[][] | {
                [key: string]: string | null;
            } | null;
            /** Data */
            data?: string | {
                [key: string]: unknown;
            } | unknown[] | unknown | null;
            /** Env */
            env?: {
                [key: string]: unknown;
            } | null;
            /** Fragment */
            fragment?: string | null;
            /** Method */
            method?: string | null;
            /** Protocol */
            protocol?: string | null;
            /** Url */
            url?: string | null;
            /** Headers */
            headers?: (string | null)[][] | null;
            /** Querystring */
            queryString?: (string | null)[][] | null;
        };
        /** RequestEntry */
        RequestEntry: {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "request";
            data: components["schemas"]["Request"];
        };
        /** IssueEventDetailSchema */
        IssueEventDetailSchema: {
            /** Platform */
            platform?: string | null;
            /** Id.Hex */
            "id.hex": string;
            /** Eventid */
            eventID: string;
            /** Issue.Project Id */
            "issue.project_id": number;
            /** Groupid */
            groupID: string;
            /**
             * Datecreated
             * Format: date-time
             */
            dateCreated: string;
            /**
             * Datereceived
             * Format: date-time
             */
            dateReceived: string;
            /** Dist */
            dist?: string | null;
            /** Transaction */
            transaction?: string | null;
            /** Data.Modules */
            "data.modules"?: {
                [key: string]: string | null;
            } | null;
            /** Get Type Display */
            get_type_display: string;
            /** Message */
            message: string;
            /** Metadata */
            metadata?: {
                [key: string]: string;
            };
            /**
             * Tags
             * @default []
             */
            tags: {
                [key: string]: string | null;
            }[];
            /** Entries */
            entries?: (components["schemas"]["BreadcrumbsEntry"] | components["schemas"]["CSPEntry"] | components["schemas"]["ExceptionEntry"] | components["schemas"]["MessageEntry"] | components["schemas"]["RequestEntry"])[];
            /** Contexts */
            contexts?: {
                [key: string]: (components["schemas"]["DeviceContext"] | components["schemas"]["OSContext"] | components["schemas"]["RuntimeContext"] | components["schemas"]["AppContext"] | components["schemas"]["BrowserContext"] | components["schemas"]["GPUContext"] | components["schemas"]["StateContext"] | components["schemas"]["CultureContext"] | components["schemas"]["CloudResourceContext"] | components["schemas"]["TraceContext"] | components["schemas"]["ReplayContext"] | components["schemas"]["ResponseContext"]) | unknown;
            } | null;
            /** Context */
            context?: {
                [key: string]: unknown;
            } | null;
            /** User */
            user?: unknown | null;
            /** Sdk */
            sdk?: {
                [key: string]: unknown;
            } | null;
            /** Title */
            title: string;
            userReport: components["schemas"]["UserReportSchema"] | null;
            /** Nexteventid */
            nextEventID?: string | null;
            /** Previouseventid */
            previousEventID?: string | null;
        };
        /** UserReportSchema */
        UserReportSchema: {
            /** Event Id.Hex */
            "event_id.hex": string;
            /** Event */
            event: {
                [key: string]: string;
            };
            /**
             * Datecreated
             * Format: date-time
             */
            dateCreated: string;
            /** User */
            user?: string | null;
            /** ID */
            id?: number | null;
            /** Name */
            name: string;
            /** Email */
            email: string;
            /** Comments */
            comments: string;
        };
        /**
         * IssueEventJsonSchema
         * @description Represents a more raw view of the event, built with open source (legacy) Sentry compatibility
         */
        IssueEventJsonSchema: {
            /** Platform */
            platform?: string | null;
            /** Id.Hex */
            "id.hex": string;
            /**
             * Timestamp
             * Format: date-time
             */
            timestamp: string;
            /** Data.Breadcrumbs */
            "data.breadcrumbs"?: unknown | null;
            /** Issue.Project Id */
            "issue.project_id": number;
            /** Get Level Display */
            get_level_display: string | null;
            /** Data.Exception */
            "data.exception"?: unknown | null;
            /** Data.Modules */
            "data.modules"?: {
                [key: string]: string;
            } | null;
            /** Data.Contexts */
            "data.contexts"?: {
                [key: string]: unknown;
            } | null;
            /** Data.Sdk */
            "data.sdk"?: {
                [key: string]: unknown;
            } | null;
            /** Get Type Display */
            get_type_display: string | null;
            /** Data.Request */
            "data.request"?: unknown | null;
            /** Data.Environment */
            "data.environment"?: string | null;
            /** Data.Extra */
            "data.extra"?: {
                [key: string]: unknown;
            } | null;
            "data.user"?: components["schemas"]["EventUser"] | null;
            /** Title */
            title: string;
            /** Transaction */
            transaction: string;
            /** Tags */
            tags: Record<string, unknown>;
            /** Hashes */
            hashes: unknown[];
        };
        /** IssueDetailSchema */
        IssueDetailSchema: {
            /** Id */
            id: string;
            /** Count */
            count: string;
            /** Type */
            type: string;
            /** Level */
            level: string;
            /** Status */
            status: string;
            project: components["schemas"]["ProjectReference"];
            /** Shortid */
            shortId: string;
            /** Numcomments */
            numComments: number;
            /**
             * Stats
             * @default {
             *       "24h": []
             *     }
             */
            stats: {
                [key: string]: number[][];
            } | null;
            /** Share Id */
            share_id?: number | null;
            /** Logger */
            logger?: string | null;
            /**
             * Permalink
             * @default Not implemented
             */
            permalink: string | null;
            /**
             * Status Details
             * @default {}
             */
            status_details: {
                [key: string]: string;
            } | null;
            /** Subscription Details */
            subscription_details?: string | null;
            /**
             * User Count
             * @default 0
             */
            user_count: number | null;
            /** Matching Event Id */
            matching_event_id?: string | null;
            /**
             * Firstseen
             * Format: date-time
             */
            firstSeen: string;
            /**
             * Lastseen
             * Format: date-time
             */
            lastSeen: string;
            /** Title */
            title: string;
            /** Metadata */
            metadata: Record<string, unknown>;
            /** Culprit */
            culprit?: string | null;
            /** Userreportcount */
            userReportCount: number;
        };
        /** ProjectReference */
        ProjectReference: {
            /** Id */
            id: string;
            /** Platform */
            platform?: string | null;
            /** Slug */
            slug?: string | null;
            /** Name */
            name: string;
        };
        /**
         * EventStatusEnum
         * @enum {string}
         */
        EventStatusEnum: "unresolved" | "resolved" | "ignored";
        /** UpdateIssueSchema */
        UpdateIssueSchema: {
            status?: components["schemas"]["EventStatusEnum"] | null;
            /** Merge */
            merge?: number | null;
        };
        /** IssueFilters */
        IssueFilters: {
            /** Id */
            id?: number[];
            /**
             * Start
             * Format: date-time
             */
            start?: string;
            /**
             * End
             * Format: date-time
             */
            end?: string;
            /** Project */
            project?: string[];
            /** Environment */
            environment?: string[] | null;
            /** Query */
            query?: string | null;
        };
        /** IssueSchema */
        IssueSchema: {
            /** Id */
            id: string;
            /** Count */
            count: string;
            /** Get Type Display */
            get_type_display: string;
            /** Get Level Display */
            get_level_display: string;
            /** Get Status Display */
            get_status_display: string;
            project: components["schemas"]["ProjectReference"];
            /** Short Id Display */
            short_id_display: string;
            /** Num Comments */
            num_comments: number;
            /**
             * Stats
             * @default {
             *       "24h": []
             *     }
             */
            stats: {
                [key: string]: number[][];
            } | null;
            /** Shareid */
            shareId?: number | null;
            /** Logger */
            logger?: string | null;
            /**
             * Permalink
             * @default Not implemented
             */
            permalink: string | null;
            /**
             * Statusdetails
             * @default {}
             */
            statusDetails: {
                [key: string]: string;
            } | null;
            /** Subscriptiondetails */
            subscriptionDetails?: string | null;
            /**
             * Usercount
             * @default 0
             */
            userCount: number | null;
            /** Matchingeventid */
            matchingEventId?: string | null;
            /**
             * First Seen
             * Format: date-time
             */
            first_seen: string;
            /**
             * Last Seen
             * Format: date-time
             */
            last_seen: string;
            /** Title */
            title: string;
            /** Metadata */
            metadata: Record<string, unknown>;
            /** Culprit */
            culprit?: string | null;
        };
        /** IssueTagSchema */
        IssueTagSchema: {
            /** Topvalues */
            topValues: components["schemas"]["IssueTagTopValue"][];
            /** Uniquevalues */
            uniqueValues: number;
            /** Key */
            key: string;
            /** Name */
            name: string;
            /** Totalvalues */
            totalValues: number;
        };
        /** IssueTagTopValue */
        IssueTagTopValue: {
            /** Name */
            name: string;
            /** Value */
            value: string;
            /** Count */
            count: number;
            /** Key */
            key: string;
        };
        /** IssueHashSchema */
        IssueHashSchema: {
            /** Id */
            id: string;
            latestEvent: components["schemas"]["IssueEventSchema"] | null;
        };
        /** IssueHashQuerySchema */
        IssueHashQuerySchema: {
            /** Id */
            id: string[];
        };
        /** OrganizationSchema */
        OrganizationSchema: {
            /**
             * Name
             * @description The name of the organization
             */
            name: string;
            /** Id */
            id: string;
            /**
             * Created
             * Format: date-time
             */
            created: string;
            /**
             * Status
             * @default {
             *       "id": "active",
             *       "name": "active"
             *     }
             */
            status: {
                [key: string]: string;
            };
            /**
             * Avatar
             * @default {
             *       "avatarType": "",
             *       "avatarUuid": null
             *     }
             */
            avatar: {
                [key: string]: string | null;
            };
            /**
             * Isearlyadopter
             * @default false
             */
            isEarlyAdopter: boolean;
            /**
             * Require2Fa
             * @default false
             */
            require2fa: boolean;
            /**
             * Slug
             * @description The name in all lowercase, suitable for URL identification
             */
            slug: string;
            /**
             * Is Accepting Events
             * @description Used for throttling at org level
             * @default true
             */
            isAcceptingEvents: boolean;
            /**
             * Event Throttle Rate
             * @description Probability (in percent) on how many events are throttled. Used for throttling at project level
             * @default 0
             */
            eventThrottleRate: number;
        };
        /** OrganizationDetailSchema */
        OrganizationDetailSchema: {
            /**
             * Name
             * @description The name of the organization
             */
            name: string;
            /** Id */
            id: string;
            /**
             * Created
             * Format: date-time
             */
            created: string;
            /**
             * Status
             * @default {
             *       "id": "active",
             *       "name": "active"
             *     }
             */
            status: {
                [key: string]: string;
            };
            /**
             * Avatar
             * @default {
             *       "avatarType": "",
             *       "avatarUuid": null
             *     }
             */
            avatar: {
                [key: string]: string | null;
            };
            /**
             * Isearlyadopter
             * @default false
             */
            isEarlyAdopter: boolean;
            /**
             * Require2Fa
             * @default false
             */
            require2fa: boolean;
            /**
             * Slug
             * @description The name in all lowercase, suitable for URL identification
             */
            slug: string;
            /**
             * Is Accepting Events
             * @description Used for throttling at org level
             * @default true
             */
            isAcceptingEvents: boolean;
            /**
             * Event Throttle Rate
             * @description Probability (in percent) on how many events are throttled. Used for throttling at project level
             * @default 0
             */
            eventThrottleRate: number;
            /** Projects */
            projects: components["schemas"]["ProjectTeamSchema"][];
            /** Teams */
            teams: components["schemas"]["TeamSchema"][];
            /** Access */
            access: ("org:read" | "org:write" | "org:admin" | "org:integrations" | "member:read" | "member:write" | "member:admin" | "team:read" | "team:write" | "team:admin" | "project:read" | "project:write" | "project:admin" | "project:releases" | "event:read" | "event:write" | "event:admin")[];
            /**
             * Open Membership
             * @description Allow any organization member to join any team
             * @default true
             */
            openMembership: boolean;
        };
        /**
         * ProjectTeamSchema
         * @description Project Schema with related teams
         */
        ProjectTeamSchema: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Id */
            id: string;
            /**
             * Avatar
             * @default {
             *       "avatarType": "",
             *       "avatarUuid": null
             *     }
             */
            avatar: {
                [key: string]: string | null;
            };
            /**
             * Color
             * @default
             */
            color: string;
            /**
             * Features
             * @default []
             */
            features: unknown[];
            /**
             * Hasaccess
             * @default true
             */
            hasAccess: boolean;
            /**
             * Isbookmarked
             * @default false
             */
            isBookmarked: boolean;
            /**
             * Isinternal
             * @default false
             */
            isInternal: boolean;
            /** Ismember */
            isMember: boolean;
            /**
             * Ispublic
             * @default false
             */
            isPublic: boolean;
            /** Scrubipaddresses */
            scrubIpAddresses: boolean;
            /**
             * Datecreated
             * Format: date-time
             */
            dateCreated: string;
            /** Platform */
            platform?: string | null;
            /** First Event */
            firstEvent?: string | null;
            /**
             * Event Throttle Rate
             * @description Probability (in percent) on how many events are throttled. Used for throttling at project level
             * @default 0
             */
            eventThrottleRate: number;
            /** Teams */
            teams: components["schemas"]["TeamSlugSchema"][];
        };
        /** TeamSchema */
        TeamSchema: {
            /** Id */
            id: string;
            /** Slug */
            slug: string;
            /**
             * Created
             * Format: date-time
             */
            created: string;
            /** Ismember */
            isMember: boolean;
            /** Membercount */
            memberCount: number;
        };
        /**
         * TeamSlugSchema
         * @description Used in relations including organization projects
         */
        TeamSlugSchema: {
            /** Id */
            id: string;
            /** Slug */
            slug: string;
        };
        /** OrganizationInSchema */
        OrganizationInSchema: {
            /**
             * Name
             * @description The name of the organization
             */
            name: string;
        };
        /** OrganizationUserSchema */
        OrganizationUserSchema: {
            /** Id */
            id: string;
            /**
             * Role
             * @enum {string}
             */
            role: "member" | "admin" | "manager" | "owner";
            /** Rolename */
            roleName: string;
            /**
             * Datecreated
             * Format: date-time
             */
            dateCreated: string;
            /** Email */
            email: string;
            user?: components["schemas"]["UserSchema"] | null;
            /** Pending */
            pending: boolean;
            /** Isowner */
            isOwner: boolean;
        };
        /** OrganizationUserIn */
        OrganizationUserIn: {
            /**
             * Orgrole
             * @enum {string}
             */
            orgRole: "member" | "admin" | "manager" | "owner";
            /** Teamroles */
            teamRoles?: components["schemas"]["TeamRole"][];
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Sendinvite
             * @default true
             */
            sendInvite: boolean;
            /**
             * Reinvite
             * @default true
             */
            reinvite: boolean;
        };
        /** TeamRole */
        TeamRole: {
            /** Teamslug */
            teamSlug: string;
            /**
             * Role
             * @default
             */
            role: string;
        };
        /** OrganizationUserDetailSchema */
        OrganizationUserDetailSchema: {
            /** Id */
            id: string;
            /**
             * Role
             * @enum {string}
             */
            role: "member" | "admin" | "manager" | "owner";
            /** Rolename */
            roleName: string;
            /**
             * Datecreated
             * Format: date-time
             */
            dateCreated: string;
            /** Email */
            email: string;
            user?: components["schemas"]["UserSchema"] | null;
            /** Pending */
            pending: boolean;
            /** Isowner */
            isOwner: boolean;
            /** Teams */
            teams: string[];
        };
        /** OrganizationUserUpdateSchema */
        OrganizationUserUpdateSchema: {
            /**
             * Orgrole
             * @enum {string}
             */
            orgRole: "member" | "admin" | "manager" | "owner";
            /** Teamroles */
            teamRoles?: components["schemas"]["TeamRole"][];
        };
        /** AcceptInviteSchema */
        AcceptInviteSchema: {
            /** Acceptinvite */
            acceptInvite: boolean;
            orgUser: components["schemas"]["OrganizationUserOrganizationSchema"];
        };
        /**
         * OrganizationUserOrganizationSchema
         * @description Organization User Serializer with Organization info
         */
        OrganizationUserOrganizationSchema: {
            /** Id */
            id: string;
            /**
             * Role
             * @enum {string}
             */
            role: "member" | "admin" | "manager" | "owner";
            /** Rolename */
            roleName: string;
            /**
             * Datecreated
             * Format: date-time
             */
            dateCreated: string;
            /** Email */
            email: string;
            user?: components["schemas"]["UserSchema"] | null;
            /** Pending */
            pending: boolean;
            /** Isowner */
            isOwner: boolean;
            organization: components["schemas"]["OrganizationSchema"];
        };
        /** AcceptInviteIn */
        AcceptInviteIn: {
            /** Acceptinvite */
            acceptInvite: boolean;
        };
        /** TransactionEventSchema */
        TransactionEventSchema: {
            /** Event Id */
            event_id?: string | null;
            /**
             * Timestamp
             * @description Datetime reported by client as the time the measurement finished
             */
            timestamp?: string | null;
            /**
             * Start Timestamp
             * Format: date-time
             * @description Datetime reported by client as the time the measurement started
             */
            start_timestamp: string;
        };
        /** TransactionGroupFilters */
        TransactionGroupFilters: {
            /** Start */
            start?: string | null;
            /** End */
            end?: string | null;
            /**
             * Sort
             * @default -avg_duration
             * @enum {string}
             */
            sort: "created" | "-created" | "avg_duration" | "-avg_duration" | "transaction_count" | "-transaction_count";
            /**
             * Environment
             * @default []
             */
            environment: string[];
            /** Query */
            query?: string | null;
        };
        /** TransactionGroupSchema */
        TransactionGroupSchema: {
            /** Avgduration */
            avgDuration: number | null;
            /** Transactioncount */
            transactionCount: number;
            /** Project Id */
            project_id: number;
            /** ID */
            id?: number | null;
            /** Transaction */
            transaction: string;
            /** Op */
            op: string;
            /** Method */
            method?: string | null;
        };
        /** ProjectOrganizationSchema */
        ProjectOrganizationSchema: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Id */
            id: string;
            /**
             * Avatar
             * @default {
             *       "avatarType": "",
             *       "avatarUuid": null
             *     }
             */
            avatar: {
                [key: string]: string | null;
            };
            /**
             * Color
             * @default
             */
            color: string;
            /**
             * Features
             * @default []
             */
            features: unknown[];
            /**
             * Hasaccess
             * @default true
             */
            hasAccess: boolean;
            /**
             * Isbookmarked
             * @default false
             */
            isBookmarked: boolean;
            /**
             * Isinternal
             * @default false
             */
            isInternal: boolean;
            /** Ismember */
            isMember: boolean;
            /**
             * Ispublic
             * @default false
             */
            isPublic: boolean;
            /** Scrubipaddresses */
            scrubIpAddresses: boolean;
            /**
             * Datecreated
             * Format: date-time
             */
            dateCreated: string;
            /** Platform */
            platform?: string | null;
            /** First Event */
            firstEvent?: string | null;
            /**
             * Event Throttle Rate
             * @description Probability (in percent) on how many events are throttled. Used for throttling at project level
             * @default 0
             */
            eventThrottleRate: number;
            organization: components["schemas"]["OrganizationSchema"];
        };
        /** ProjectIn */
        ProjectIn: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Platform */
            platform?: string | null;
            /** Eventthrottlerate */
            eventThrottleRate?: number | null;
        };
        /**
         * ProjectSchema
         * @description A project is an organizational unit for GlitchTip events. It may contain
         *     DSN keys, be connected to exactly one organization, and provide user permissions
         *     through teams.
         */
        ProjectSchema: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
            /** Id */
            id: string;
            /**
             * Avatar
             * @default {
             *       "avatarType": "",
             *       "avatarUuid": null
             *     }
             */
            avatar: {
                [key: string]: string | null;
            };
            /**
             * Color
             * @default
             */
            color: string;
            /**
             * Features
             * @default []
             */
            features: unknown[];
            /**
             * Hasaccess
             * @default true
             */
            hasAccess: boolean;
            /**
             * Isbookmarked
             * @default false
             */
            isBookmarked: boolean;
            /**
             * Isinternal
             * @default false
             */
            isInternal: boolean;
            /** Ismember */
            isMember: boolean;
            /**
             * Ispublic
             * @default false
             */
            isPublic: boolean;
            /** Scrubipaddresses */
            scrubIpAddresses: boolean;
            /**
             * Datecreated
             * Format: date-time
             */
            dateCreated: string;
            /** Platform */
            platform?: string | null;
            /** First Event */
            firstEvent?: string | null;
            /**
             * Event Throttle Rate
             * @description Probability (in percent) on how many events are throttled. Used for throttling at project level
             * @default 0
             */
            eventThrottleRate: number;
        };
        /** KeyRateLimit */
        KeyRateLimit: {
            /** Window */
            window: number;
            /** Count */
            count: number;
        };
        /**
         * ProjectKeySchema
         * @description A project key (DSN) provides a public authentication string used for event
         *     ingestion.
         */
        ProjectKeySchema: {
            /** Name */
            name: string | null;
            rateLimit?: components["schemas"]["KeyRateLimit"] | null;
            /**
             * Created
             * Format: date-time
             */
            created: string;
            /**
             * Public Key
             * Format: uuid
             */
            public_key: string;
            /** Dsn */
            dsn: {
                [key: string]: string;
            };
            /** Project Id */
            project_id: number;
        };
        /** ProjectKeyIn */
        ProjectKeyIn: {
            /** Name */
            name?: string | null;
            rateLimit?: components["schemas"]["KeyRateLimit"] | null;
        };
        /** StrKeyIntValue */
        StrKeyIntValue: {
            [key: string]: number;
        };
        /** StatsV2Schema */
        StatsV2Schema: {
            /**
             * Category
             * @enum {string}
             */
            category: "error" | "transaction";
            /**
             * Interval
             * @default 1h
             */
            interval: ("1d" | "1h" | "1m") | null;
            /** Project */
            project?: number[] | null;
            /**
             * Field
             * @enum {string}
             */
            field: "sum(quantity)" | "sum(times_seen)";
            /**
             * Start
             * Format: date-time
             */
            start: string;
            /**
             * End
             * Format: date-time
             */
            end: string;
        };
        /** StripeNestedPriceSchema */
        StripeNestedPriceSchema: {
            /** Stripeid */
            stripeID: string;
            /** Price */
            price: string;
        };
        /** StripeProductExpandedPriceSchema */
        StripeProductExpandedPriceSchema: {
            /** Stripeid */
            stripeID: string;
            defaultPrice: components["schemas"]["StripeNestedPriceSchema"];
            /** Name */
            name: string;
            /** Description */
            description: string;
            /** Events */
            events: number;
        };
        /**
         * CollectionMethod
         * @enum {string}
         */
        CollectionMethod: "charge_automatically" | "send_invoice";
        /** StripeProductSchema */
        StripeProductSchema: {
            /** Stripeid */
            stripeID: string;
            /** Name */
            name: string;
            /** Description */
            description: string;
            /** Events */
            events: number;
            /** Default Price */
            default_price_id?: string | null;
        };
        /** StripeSubscriptionSchema */
        StripeSubscriptionSchema: {
            /** Stripeid */
            stripeID: string;
            product: components["schemas"]["StripeProductSchema"];
            price: components["schemas"]["StripeNestedPriceSchema"];
            status: components["schemas"]["SubscriptionStatus"] | null;
            collectionMethod: components["schemas"]["CollectionMethod"];
            /**
             * Created
             * Format: date-time
             */
            created: string;
            /**
             * Current Period Start
             * Format: date-time
             */
            currentPeriodStart: string;
            /**
             * Current Period End
             * Format: date-time
             */
            currentPeriodEnd: string;
            /**
             * Start Date
             * Format: date-time
             */
            startDate: string;
        };
        /**
         * SubscriptionStatus
         * @enum {string}
         */
        SubscriptionStatus: "incomplete" | "incomplete_expired" | "trialing" | "active" | "past_due" | "canceled" | "unpaid" | "paused";
        /** StripeCheckoutSessionSchema */
        StripeCheckoutSessionSchema: {
            /** Id */
            id: string;
        };
        /** PriceIDSchema */
        PriceIDSchema: {
            /** Price */
            price: string;
        };
        /** StripePortalSessionSchema */
        StripePortalSessionSchema: {
            /** Url */
            url: string;
        };
        /** CreateSubscriptionResponse */
        CreateSubscriptionResponse: {
            /** Price */
            price: string;
            /** Organization */
            organization: string;
            subscription: components["schemas"]["StripeSubscriptionSchema"];
        };
        /** SubscriptionIn */
        SubscriptionIn: {
            /** Price */
            price: string;
            /** Organization */
            organization: string;
        };
        /** EventsCountSchema */
        EventsCountSchema: {
            /** Eventcount */
            eventCount: number;
            /** Transactioneventcount */
            transactionEventCount: number;
            /** Uptimecheckeventcount */
            uptimeCheckEventCount: number;
            /** Filesizemb */
            fileSizeMb: number;
        };
        /** ArtifactBundleAssembleIn */
        ArtifactBundleAssembleIn: {
            /** Checksum */
            checksum: string;
            /** Chunks */
            chunks: string[];
            /** Projects */
            projects: string[];
            /** Version */
            version?: string | null;
        };
        /**
         * TeamProjectSchema
         * @description TeamSchema with related projects
         */
        TeamProjectSchema: {
            /** Id */
            id: string;
            /** Slug */
            slug: string;
            /**
             * Created
             * Format: date-time
             */
            created: string;
            /** Ismember */
            isMember: boolean;
            /** Membercount */
            memberCount: number;
            /**
             * Projects
             * @default []
             */
            projects: components["schemas"]["ProjectSchema"][];
        };
        /** TeamIn */
        TeamIn: {
            /** Slug */
            slug: string;
        };
        /** MonitorCheckSchema */
        MonitorCheckSchema: {
            /** Is Up */
            isUp: boolean;
            /**
             * Start Check
             * Format: date-time
             * @description Time when the start of this check was performed
             */
            startCheck?: string;
            /**
             * Reason
             * @default 0
             */
            reason: number | null;
        };
        /** MonitorSchema */
        MonitorSchema: {
            /** Projectid */
            projectID: string | null;
            /** Environmentid */
            environmentID: number | null;
            /** Isup */
            isUp: boolean | null;
            /** Lastchange */
            lastChange: string | null;
            /** Heartbeatendpoint */
            heartbeatEndpoint: string | null;
            /** Projectname */
            projectName?: string | null;
            /** Envname */
            envName?: string | null;
            /** Checks */
            checks: components["schemas"]["MonitorCheckSchema"][];
            /** Organizationid */
            organizationID: number;
            monitorType: components["schemas"]["MonitorType"];
            /** ID */
            id?: number | null;
            /**
             * Endpoint Id
             * @description Used for referencing heartbeat endpoint
             */
            endpointID?: string | null;
            /**
             * Created
             * Format: date-time
             */
            created: string;
            /** Name */
            name: string;
            /** Url */
            url?: string | null;
            /**
             * Expected Status
             * @default 200
             */
            expectedStatus: number | null;
            /** Expected Body */
            expectedBody?: string | null;
            /**
             * Interval
             * @default 60
             */
            interval: number;
            /**
             * Timeout
             * @description Blank implies default value of 20
             */
            timeout?: number | null;
        };
        /**
         * MonitorType
         * @enum {string}
         */
        MonitorType: "Ping" | "GET" | "POST" | "TCP Port" | "SSL" | "Heartbeat";
        /** MonitorIn */
        MonitorIn: {
            /** Expectedbody */
            expectedBody: string;
            /** Expectedstatus */
            expectedStatus: number | null;
            /** Timeout */
            timeout: number | null;
            /** Project */
            project?: string | null;
            /**
             * Monitor Type
             * @default Ping
             */
            monitorType: string;
            /** Name */
            name: string;
            /** Url */
            url?: string | null;
            /**
             * Interval
             * @default 60
             */
            interval: number;
        };
        /**
         * MonitorCheckResponseTimeSchema
         * @description Monitor check with response time. Used in Monitors detail api and monitor checks list
         */
        MonitorCheckResponseTimeSchema: {
            /** Is Up */
            isUp: boolean;
            /**
             * Start Check
             * Format: date-time
             * @description Time when the start of this check was performed
             */
            startCheck?: string;
            /**
             * Reason
             * @default 0
             */
            reason: number | null;
            /**
             * Response Time
             * @description Reponse time in milliseconds
             */
            responseTime?: number | null;
        };
        /** MonitorDetailSchema */
        MonitorDetailSchema: {
            /** Projectid */
            projectID: string | null;
            /** Environmentid */
            environmentID: number | null;
            /** Isup */
            isUp: boolean | null;
            /** Lastchange */
            lastChange: string | null;
            /** Heartbeatendpoint */
            heartbeatEndpoint: string | null;
            /** Projectname */
            projectName?: string | null;
            /** Envname */
            envName?: string | null;
            /** Checks */
            checks: components["schemas"]["MonitorCheckResponseTimeSchema"][];
            /** Organizationid */
            organizationID: number;
            monitorType: components["schemas"]["MonitorType"];
            /** ID */
            id?: number | null;
            /**
             * Endpoint Id
             * @description Used for referencing heartbeat endpoint
             */
            endpointID?: string | null;
            /**
             * Created
             * Format: date-time
             */
            created: string;
            /** Name */
            name: string;
            /** Url */
            url?: string | null;
            /**
             * Expected Status
             * @default 200
             */
            expectedStatus: number | null;
            /** Expected Body */
            expectedBody?: string | null;
            /**
             * Interval
             * @default 60
             */
            interval: number;
            /**
             * Timeout
             * @description Blank implies default value of 20
             */
            timeout?: number | null;
        };
        /** StatusPageSchema */
        StatusPageSchema: {
            /**
             * Is Public
             * @description When true, the status page URL is publicly accessible
             */
            isPublic: boolean;
            /** Name */
            name: string;
            /** Monitors */
            monitors: components["schemas"]["MonitorSchema"][];
            /** Slug */
            slug?: string | null;
        };
        /** StatusPageIn */
        StatusPageIn: {
            /**
             * Ispublic
             * @default false
             */
            isPublic: boolean;
            /** Name */
            name: string;
        };
        /** UserDetailSchema */
        UserDetailSchema: {
            /** Id */
            id: string;
            options: components["schemas"]["UserOptions"];
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Datejoined
             * Format: date-time
             */
            dateJoined: string;
            /** Haspasswordauth */
            hasPasswordAuth: boolean;
            /** Identities */
            identities: components["schemas"]["SocialAccountSchema"][];
            /** Last Login */
            lastLogin?: string | null;
            /**
             * Superuser Status
             * @description Designates that this user has all permissions without explicitly assigning them.
             * @default false
             */
            isSuperuser: boolean;
            /**
             * Active
             * @description Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
             * @default true
             */
            isActive: boolean;
            /** Name */
            name?: string | null;
            /** Chatwootidentifierhash */
            chatwootIdentifierHash?: string | null;
        };
        /** UserIn */
        UserIn: {
            options: components["schemas"]["UserOptions"];
            /** Name */
            name?: string | null;
        };
        /** EmailAddressSchema */
        EmailAddressSchema: {
            /** Isprimary */
            isPrimary: boolean;
            /** Isverified */
            isVerified: boolean;
            /** Email Address */
            email: string;
        };
        /** EmailAddressIn */
        EmailAddressIn: {
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** UserNotificationsSchema */
        UserNotificationsSchema: {
            /**
             * Subscribe By Default
             * @description Subscribe to project notifications by default. Overrides project settings
             * @default true
             */
            subscribeByDefault: boolean;
        };
        /** RecoveryCodesSchema */
        RecoveryCodesSchema: {
            /** Codes */
            codes: string[];
        };
        /** RecoveryCodeSchema */
        RecoveryCodeSchema: {
            /** Code */
            code: string;
        };
        /**
         * SetupWizardSchema
         * @description A 64 char random string used to provide a shorted lived and secure
         *     way to transfer sensative data.
         */
        SetupWizardSchema: {
            /** Hash */
            hash: string;
        };
        /** NameSlugProjectSchema */
        NameSlugProjectSchema: {
            /** Name */
            name: string;
            /** Slug */
            slug?: string | null;
        };
        /** ReleaseSchema */
        ReleaseSchema: {
            /** Ref */
            ref?: string | null;
            /** Released */
            released: string | null;
            /** Version */
            version: string;
            /**
             * Created
             * Format: date-time
             */
            created: string;
            /** Projects */
            projects: components["schemas"]["NameSlugProjectSchema"][];
            /** Url */
            url?: string | null;
            /** Data */
            data?: Record<string, unknown>;
            /**
             * Deploy Count
             * @default 0
             */
            deployCount: number;
        };
        /** ReleaseIn */
        ReleaseIn: {
            /** Ref */
            ref?: string | null;
            /** Datereleased */
            dateReleased?: string | null;
            /** Version */
            version: string;
            /** Projects */
            projects: string[];
        };
        /** ReleaseBase */
        ReleaseBase: {
            /** Ref */
            ref?: string | null;
            /** Datereleased */
            dateReleased?: string | null;
            /** Version */
            version: string;
        };
        /** ReleaseUpdate */
        ReleaseUpdate: {
            /** Ref */
            ref?: string | null;
            /** Datereleased */
            dateReleased?: string | null;
        };
        /** DebugSymbolBundleSchema */
        DebugSymbolBundleSchema: {
            /** Id */
            id: string;
            /**
             * Created
             * Format: date-time
             */
            created: string;
            /** File.Checksum */
            "file.checksum"?: string | null;
            /** File.Headers */
            "file.headers"?: {
                [key: string]: string;
            } | null;
            /** File.Name */
            "file.name": string;
        };
        /** AssembleSchema */
        AssembleSchema: {
            /** Checksum */
            checksum: string;
            /** Chunks */
            chunks: string[];
        };
        /** EmbedGetSchema */
        EmbedGetSchema: {
            /** Dsn */
            dsn: string;
            /** Eventid */
            eventId: string;
            /**
             * Title
             * @default It looks like we're having issues.
             */
            title: string;
            /**
             * Subtitle
             * @default Our team has been notified.
             */
            subtitle: string;
            /**
             * Subtitle2
             * @default If you'd like to help, tell us what happened below.
             */
            subtitle2: string;
            /**
             * Labelname
             * @default Name
             */
            labelName: string;
            /**
             * Labelemail
             * @default Email
             */
            labelEmail: string;
            /**
             * Labelcomments
             * @default What happened?
             */
            labelComments: string;
            /**
             * Labelclose
             * @default Close
             */
            labelClose: string;
            /**
             * Labelsubmit
             * @default Submit Crash Report
             */
            labelSubmit: string;
            /**
             * Errorgeneric
             * @default An unknown error occurred while submitting your report. Please try again.
             */
            errorGeneric: string;
            /**
             * Errorformentry
             * @default Some fields were invalid. Please correct the errors and try again.
             */
            errorFormEntry: string;
            /**
             * Successmessage
             * @default Your feedback has been sent. Thank you!
             */
            successMessage: string;
            /** Name */
            name?: string | null;
            /** Email */
            email?: string | null;
        };
        /** UserReportFormInput */
        UserReportFormInput: {
            /** Name */
            name: string | null;
            /** Email */
            email: string | null;
            /** Comments */
            comments: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    glitchtip_api_api_get_settings: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SettingsOut"];
                };
            };
        };
    };
    glitchtip_api_api_api_root: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIRootSchema"];
                };
            };
        };
    };
    apps_api_tokens_api_list_api_tokens: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APITokenSchema"][];
                };
            };
        };
    };
    apps_api_tokens_api_create_api_token: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["APITokenIn"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APITokenSchema"];
                };
            };
        };
    };
    apps_api_tokens_api_delete_api_token: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                token_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_event_ingest_api_event_store: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EventIngestSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventIngestOut"];
                };
            };
        };
    };
    apps_event_ingest_api_event_envelope: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EnvelopeSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EnvelopeIngestOut"];
                };
            };
        };
    };
    apps_event_ingest_api_event_security: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                project_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SecuritySchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_alerts_api_list_project_alerts: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectAlertSchema"][];
                };
            };
        };
    };
    apps_alerts_api_create_project_alert: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProjectAlertIn"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectAlertSchema"];
                };
            };
        };
    };
    apps_alerts_api_update_project_alert: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                alert_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProjectAlertIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectAlertSchema"];
                };
            };
        };
    };
    apps_alerts_api_delete_project_alert: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                alert_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_difs_api_difs_assemble_api: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AssemblePayload"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_difs_api_project_reprocessing: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_difs_api_dsyms: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /**
                     * File
                     * Format: binary
                     */
                    file: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_environments_api_list_environments: {
        parameters: {
            query?: {
                visibility?: "all" | "hidden" | "visible";
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EnvironmentSchema"][];
                };
            };
        };
    };
    apps_environments_api_list_environment_projects: {
        parameters: {
            query?: {
                visibility?: "all" | "hidden" | "visible";
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EnvironmentProjectSchema"][];
                };
            };
        };
    };
    apps_environments_api_update_environment_project: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                name: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EnvironmentProjectIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EnvironmentProjectSchema"];
                };
            };
        };
    };
    apps_files_api_get_chunk_upload_info: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_files_api_chunk_upload: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": {
                    /** File Gzip */
                    file_gzip: string[];
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_importer_api_importer: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ImportIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_issue_events_api_comments_list_comments: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommentSchema"][];
                };
            };
        };
    };
    apps_issue_events_api_comments_add_comment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PostCommentSchema"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommentSchema"];
                };
            };
        };
    };
    apps_issue_events_api_comments_update_comment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
                comment_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PostCommentSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommentSchema"];
                };
            };
        };
    };
    apps_issue_events_api_comments_delete_comment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
                comment_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_issue_events_api_events_list_issue_event: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueEventSchema"][];
                };
            };
        };
    };
    apps_issue_events_api_events_get_latest_issue_event: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueEventDetailSchema"];
                };
            };
        };
    };
    apps_issue_events_api_events_get_issue_event: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
                event_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueEventDetailSchema"];
                };
            };
        };
    };
    apps_issue_events_api_events_list_project_issue_event: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueEventSchema"][];
                };
            };
        };
    };
    apps_issue_events_api_events_get_project_issue_event: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                event_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueEventDetailSchema"];
                };
            };
        };
    };
    apps_issue_events_api_events_get_event_json: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                issue_id: number;
                event_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueEventJsonSchema"];
                };
            };
        };
    };
    apps_issue_events_api_issues_get_issue: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueDetailSchema"];
                };
            };
        };
    };
    apps_issue_events_api_issues_update_issue: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateIssueSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueDetailSchema"];
                };
            };
        };
    };
    apps_issue_events_api_issues_delete_issue: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_issue_events_api_issues_update_organization_issue: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateIssueSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueDetailSchema"];
                };
            };
        };
    };
    apps_issue_events_api_issues_list_issues: {
        parameters: {
            query?: {
                id?: number[];
                start?: string;
                end?: string;
                project?: string[];
                environment?: string[] | null;
                query?: string | null;
                sort?: "last_seen" | "first_seen" | "count" | "priority" | "-last_seen" | "-first_seen" | "-count" | "-priority";
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueSchema"][];
                };
            };
        };
    };
    apps_issue_events_api_issues_update_issues: {
        parameters: {
            query?: {
                id?: number[];
                start?: string;
                end?: string;
                project?: string[];
                environment?: string[] | null;
                query?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateIssueSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateIssueSchema"];
                };
            };
        };
    };
    apps_issue_events_api_issues_delete_issues: {
        parameters: {
            query?: {
                id?: number[];
                start?: string;
                end?: string;
                project?: string[];
                environment?: string[] | null;
                query?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateIssueSchema"];
                };
            };
        };
    };
    apps_issue_events_api_issues_list_project_issues: {
        parameters: {
            query?: {
                id?: number[];
                start?: string;
                end?: string;
                project?: string[];
                environment?: string[] | null;
                query?: string | null;
                sort?: "last_seen" | "first_seen" | "count" | "priority" | "-last_seen" | "-first_seen" | "-count" | "-priority";
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueSchema"][];
                };
            };
        };
    };
    apps_issue_events_api_issues_list_issue_tags: {
        parameters: {
            query?: {
                key?: string | null;
            };
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueTagSchema"][];
                };
            };
        };
    };
    apps_issue_events_api_user_reports_list_user_reports: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserReportSchema"][];
                };
            };
        };
    };
    apps_issue_events_api_hashes_list_issue_hashes: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["IssueHashSchema"][];
                };
            };
        };
    };
    apps_issue_events_api_hashes_delete_hash: {
        parameters: {
            query: {
                id: string[];
            };
            header?: never;
            path: {
                organization_slug: string;
                issue_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Accepted */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_observability_api_django_prometheus_metrics: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_organizations_ext_api_list_organizations: {
        parameters: {
            query?: {
                owner?: boolean | null;
                query?: string | null;
                sortBy?: string | null;
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationSchema"][];
                };
            };
        };
    };
    apps_organizations_ext_api_create_organization: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationInSchema"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationDetailSchema"];
                };
            };
        };
    };
    apps_organizations_ext_api_get_organization: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationDetailSchema"];
                };
            };
        };
    };
    apps_organizations_ext_api_update_organization: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationInSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationDetailSchema"];
                };
            };
        };
    };
    apps_organizations_ext_api_delete_organization: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_organizations_ext_api_list_organization_members: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationUserSchema"][];
                };
            };
        };
    };
    apps_organizations_ext_api_create_organization_member: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationUserIn"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationUserSchema"];
                };
            };
        };
    };
    apps_organizations_ext_api_list_team_organization_members: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationUserSchema"][];
                };
            };
        };
    };
    apps_organizations_ext_api_get_organization_member: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                member_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationUserDetailSchema"];
                };
            };
        };
    };
    apps_organizations_ext_api_update_organization_member: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                member_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationUserUpdateSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationUserDetailSchema"];
                };
            };
        };
    };
    apps_organizations_ext_api_delete_organization_member: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                member_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_organizations_ext_api_set_organization_owner: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                member_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganizationUserDetailSchema"];
                };
            };
        };
    };
    apps_organizations_ext_api_get_accept_invite: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_user_id: number;
                token: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AcceptInviteSchema"];
                };
            };
        };
    };
    apps_organizations_ext_api_accept_invite: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                org_user_id: number;
                token: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AcceptInviteIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AcceptInviteSchema"];
                };
            };
        };
    };
    apps_performance_api_list_transactions: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TransactionEventSchema"][];
                };
            };
        };
    };
    apps_performance_api_list_transaction_groups: {
        parameters: {
            query?: {
                start?: string | null;
                end?: string | null;
                sort?: "created" | "-created" | "avg_duration" | "-avg_duration" | "transaction_count" | "-transaction_count";
                environment?: string[];
                query?: string | null;
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TransactionGroupSchema"][];
                };
            };
        };
    };
    apps_performance_api_get_transaction_group: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TransactionGroupSchema"];
                };
            };
        };
    };
    apps_projects_api_list_projects: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectOrganizationSchema"][];
                };
            };
        };
    };
    apps_projects_api_get_project: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectOrganizationSchema"];
                };
            };
        };
    };
    apps_projects_api_update_project: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProjectIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectOrganizationSchema"];
                };
            };
        };
    };
    apps_projects_api_delete_project: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_projects_api_list_team_projects: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectSchema"][];
                };
            };
        };
    };
    apps_projects_api_create_project: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProjectIn"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectSchema"];
                };
            };
        };
    };
    apps_projects_api_list_organization_projects: {
        parameters: {
            query?: {
                query?: string | null;
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectTeamSchema"][];
                };
            };
        };
    };
    apps_projects_api_list_project_keys: {
        parameters: {
            query?: {
                status?: string | null;
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectKeySchema"][];
                };
            };
        };
    };
    apps_projects_api_create_project_key: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProjectKeyIn"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectKeySchema"];
                };
            };
        };
    };
    apps_projects_api_get_project_key: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                key_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectKeySchema"];
                };
            };
        };
    };
    apps_projects_api_update_project_key: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                key_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProjectKeyIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectKeySchema"];
                };
            };
        };
    };
    apps_projects_api_delete_project_key: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                key_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_projects_api_user_notification_alerts: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StrKeyIntValue"];
                };
            };
        };
    };
    apps_projects_api_update_user_notification_alerts: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StrKeyIntValue"];
            };
        };
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_stats_api_stats_v2: {
        parameters: {
            query: {
                category: "error" | "transaction";
                interval?: ("1d" | "1h" | "1m") | null;
                project?: number[] | null;
                field: "sum(quantity)" | "sum(times_seen)";
                start: string;
                end: string;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_stripe_api_list_stripe_products: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StripeProductExpandedPriceSchema"][];
                };
            };
        };
    };
    apps_stripe_api_get_stripe_subscription: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StripeSubscriptionSchema"] | null;
                };
            };
        };
    };
    apps_stripe_api_create_stripe_session: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PriceIDSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StripeCheckoutSessionSchema"];
                };
            };
        };
    };
    apps_stripe_api_stripe_billing_portal_session: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StripePortalSessionSchema"];
                };
            };
        };
    };
    apps_stripe_api_stripe_create_subscription: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SubscriptionIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateSubscriptionResponse"];
                };
            };
        };
    };
    apps_stripe_api_subscription_events_count: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventsCountSchema"];
                };
            };
        };
    };
    apps_sourcecode_api_artifact_bundle_assemble: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ArtifactBundleAssembleIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_teams_api_get_team: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamProjectSchema"];
                };
            };
        };
    };
    apps_teams_api_update_team: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TeamIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamProjectSchema"];
                };
            };
        };
    };
    apps_teams_api_delete_team: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_teams_api_list_teams: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamProjectSchema"][];
                };
            };
        };
    };
    apps_teams_api_create_team: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TeamIn"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamProjectSchema"];
                };
            };
        };
    };
    apps_teams_api_add_member_to_team: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                member_id: "me" | number;
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamProjectSchema"];
                };
            };
        };
    };
    apps_teams_api_delete_member_from_team: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                member_id: "me" | number;
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamProjectSchema"];
                };
            };
        };
    };
    apps_teams_api_list_project_teams: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamSchema"][];
                };
            };
        };
    };
    apps_teams_api_add_team_to_project: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectTeamSchema"];
                };
            };
        };
    };
    apps_teams_api_delete_team_from_project: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectTeamSchema"];
                };
            };
        };
    };
    apps_uptime_api_heartbeat_check: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                endpoint_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MonitorCheckSchema"];
                };
            };
        };
    };
    apps_uptime_api_list_monitors: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MonitorSchema"][];
                };
            };
        };
    };
    apps_uptime_api_create_monitor: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MonitorIn"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MonitorSchema"];
                };
            };
        };
    };
    apps_uptime_api_get_monitor: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                monitor_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MonitorDetailSchema"];
                };
            };
        };
    };
    apps_uptime_api_update_monitor: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                monitor_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MonitorIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MonitorSchema"];
                };
            };
        };
    };
    apps_uptime_api_delete_monitor: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                monitor_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_uptime_api_list_monitor_checks: {
        parameters: {
            query?: {
                is_change?: boolean | null;
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                monitor_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MonitorCheckResponseTimeSchema"][];
                };
            };
        };
    };
    apps_uptime_api_list_status_pages: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StatusPageSchema"][];
                };
            };
        };
    };
    apps_uptime_api_create_status_page: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StatusPageIn"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StatusPageSchema"];
                };
            };
        };
    };
    apps_users_api_list_users: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserSchema"][];
                };
            };
        };
    };
    apps_users_api_get_user: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserDetailSchema"];
                };
            };
        };
    };
    apps_users_api_update_user: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserSchema"];
                };
            };
        };
    };
    apps_users_api_delete_user: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_users_api_list_emails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmailAddressSchema"][];
                };
            };
        };
    };
    apps_users_api_set_email_as_primary: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EmailAddressIn"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmailAddressSchema"];
                };
            };
        };
    };
    apps_users_api_create_email: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EmailAddressIn"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EmailAddressSchema"];
                };
            };
        };
    };
    apps_users_api_delete_email: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EmailAddressIn"];
            };
        };
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_users_api_send_confirm_email: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EmailAddressIn"];
            };
        };
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_users_api_get_notifications: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserNotificationsSchema"];
                };
            };
        };
    };
    apps_users_api_update_notifications: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: "me" | number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserNotificationsSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserNotificationsSchema"];
                };
            };
        };
    };
    apps_users_api_generate_recovery_codes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RecoveryCodesSchema"];
                };
            };
        };
    };
    apps_users_api_set_recovery_codes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RecoveryCodeSchema"];
            };
        };
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_wizard_api_setup_wizard: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SetupWizardSchema"];
                };
            };
        };
    };
    apps_wizard_api_setup_wizard_hash: {
        parameters: {
            query?: {
                auth?: string;
            };
            header?: never;
            path: {
                wizard_hash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_wizard_api_setup_wizard_delete: {
        parameters: {
            query?: {
                auth?: string;
            };
            header?: never;
            path: {
                wizard_hash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_wizard_api_setup_wizard_set_token: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SetupWizardSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_releases_api_list_releases: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReleaseSchema"][];
                };
            };
        };
    };
    apps_releases_api_create_release: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReleaseIn"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReleaseSchema"];
                };
            };
        };
    };
    apps_releases_api_list_project_releases: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReleaseSchema"][];
                };
            };
        };
    };
    apps_releases_api_create_project_release: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReleaseBase"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReleaseSchema"];
                };
            };
        };
    };
    apps_releases_api_get_release: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                version: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReleaseSchema"];
                };
            };
        };
    };
    apps_releases_api_update_release: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                version: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReleaseUpdate"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReleaseSchema"];
                };
            };
        };
    };
    apps_releases_api_delete_organization_release: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                version: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_releases_api_list_release_files: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                version: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DebugSymbolBundleSchema"][];
                };
            };
        };
    };
    apps_releases_api_get_organization_release_file: {
        parameters: {
            query: {
                project_slug: string;
            };
            header?: never;
            path: {
                organization_slug: string;
                version: string;
                file_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DebugSymbolBundleSchema"];
                };
            };
        };
    };
    apps_releases_api_delete_organization_release_file: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                version: string;
                file_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_releases_api_get_project_release: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                version: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReleaseSchema"];
                };
            };
        };
    };
    apps_releases_api_update_project_release: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                version: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReleaseUpdate"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReleaseSchema"];
                };
            };
        };
    };
    apps_releases_api_delete_project_release: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                version: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_releases_api_list_project_release_files: {
        parameters: {
            query?: {
                /** @description Number of results to return per page. */
                limit?: number | null;
                /** @description The pagination cursor value. */
                cursor?: string | null;
            };
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                version: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DebugSymbolBundleSchema"][];
                };
            };
        };
    };
    apps_releases_api_get_project_release_file: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                version: string;
                file_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DebugSymbolBundleSchema"];
                };
            };
        };
    };
    apps_releases_api_delete_project_release_file: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                project_slug: string;
                version: string;
                file_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_releases_api_assemble_release: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_slug: string;
                version: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AssembleSchema"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_event_ingest_embed_api_get_embed_error_page: {
        parameters: {
            query: {
                dsn: string;
                eventId: string;
                title?: string;
                subtitle?: string;
                subtitle2?: string;
                labelName?: string;
                labelEmail?: string;
                labelComments?: string;
                labelClose?: string;
                labelSubmit?: string;
                errorGeneric?: string;
                errorFormEntry?: string;
                successMessage?: string;
                name?: string | null;
                email?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    apps_event_ingest_embed_api_submit_embed_error_page: {
        parameters: {
            query: {
                dsn: string;
                eventId: string;
                title?: string;
                subtitle?: string;
                subtitle2?: string;
                labelName?: string;
                labelEmail?: string;
                labelComments?: string;
                labelClose?: string;
                labelSubmit?: string;
                errorGeneric?: string;
                errorFormEntry?: string;
                successMessage?: string;
                name?: string | null;
                email?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": {
                    /** Name */
                    name: string | null;
                    /** Email */
                    email: string | null;
                    /** Comments */
                    comments: string | null;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
